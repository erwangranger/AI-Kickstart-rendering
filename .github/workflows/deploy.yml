name: Deploy to GitHub Pages (Per-Branch Previews)

on:
  push:
    branches:
      - main
      - '*' # Trigger on pushes to all branches
  pull_request:
    types: [opened, synchronize, reopened] # Trigger on PR creation, updates, and reopening

# Explicitly grant permissions to the GH_TOKEN for GitHub Pages deployment
permissions:
  contents: write # Needed to push to the gh-pages branch
  pages: write    # Needed for GitHub Pages deployment
  id-token: write # Needed for OpenID Connect

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clean and prepare directories
        run: |
          # Remove existing directories and files
          rm -rf node_modules
          rm -rf functions
          rm -rf api
          rm -rf build

          # Create necessary directories
          mkdir -p public/data

      - name: Install dependencies
        run: |
          # First ensure we have a package-lock.json
          if [ ! -f "package-lock.json" ]; then
            echo "No package-lock.json found, generating one..."
            npm install
          fi

          # Now we can safely use npm ci
          echo "Running clean install..."
          npm ci

          # Verify the installation
          npm ls

      - name: Generate static kickstarts data
        run: node scripts/generate-static.js

      - name: Ensure static data is in public directory
        run: |
          if [ -f public/data/kickstarts.json ]; then
            echo "Static data (kickstarts.json) is present in public/data."
          else
            echo "Error: kickstarts.json was not generated (or not found in public/data)."
            exit 1
          fi

      - name: Build
        env:
          NODE_ENV: production
          npm_config_loglevel: verbose
        run: npm run build

      - name: Verify build directory
        run: |
          if [ ! -d "build" ]; then
            echo "Error: build directory was not created"
            exit 1
          fi
          if [ ! -f "build/index.html" ]; then
            echo "Error: build/index.html was not created"
            exit 1
          fi
          echo "Build directory verified successfully"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  pages:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Download artifact (build folder) from build-and-deploy
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Deploy (push) artifact to gh-pages branch (using JamesIves/github-pages-deploy-action)
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build
          branch: gh-pages
          clean: true

