name: Deploy to GitHub Pages (Per-Branch Previews)

on:
  push:
    branches:
      - main
      - '*' # Trigger on pushes to all branches
  pull_request:
    types: [opened, synchronize, reopened] # Trigger on PR creation, updates, and reopening
  schedule:
    - cron: '0 * * * *'  # Run every hour

# Explicitly grant permissions to the GH_TOKEN for GitHub Pages deployment
permissions:
  contents: write # Needed to push to the gh-pages branch (for the build artifact)
  pages: write    # Needed for GitHub Pages deployment
  id-token: write # Needed for OpenID Connect (if using, generally good practice for GH Pages)

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Action to check out your repository code

      - name: Clean install
        run: |
          rm -rf node_modules
          npm cache clean --force

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Updated to Node.js 20 LTS
          cache: 'npm' # Enable caching for npm dependencies

      # Add cache restoration step
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Build the React app
      - name: Build
        env:
          NODE_ENV: production
          npm_config_loglevel: verbose
          # Remove the token from the build environment since we're using serverless functions
          # REACT_APP_GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm ci --include=dev
          if [ -f /home/runner/.npm/_logs/*-debug-0.log ]; then
            echo "=== npm debug log ==="
            cat /home/runner/.npm/_logs/*-debug-0.log
            echo "=== end npm debug log ==="
          fi
          # Build without any token
          npm run build

      # Deploy to GitHub Pages
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages
          commit_message: "Update site: ${{ github.event_name }}"
          keep_files: true # Keep the functions directory

      # Configure GitHub Pages to use the serverless function
      - name: Configure GitHub Pages
        run: |
          # Create a _routes.json file to handle API requests
          echo '{
            "version": 1,
            "include": ["/*"],
            "exclude": [],
            "routes": [
              {
                "src": "/.github/functions/github-data",
                "dest": "/.github/functions/github-data.js",
                "methods": ["POST", "OPTIONS"],
                "headers": {
                  "Access-Control-Allow-Origin": "*",
                  "Access-Control-Allow-Methods": "POST, OPTIONS",
                  "Access-Control-Allow-Headers": "Content-Type"
                }
              }
            ]
          }' > build/_routes.json

      # Add environment variable for the serverless function
      - name: Add environment variable
        run: |
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_OUTPUT
